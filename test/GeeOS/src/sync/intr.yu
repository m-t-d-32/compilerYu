import arch.riscv.csr
import lib.except

// pushOff/popOff are like setIntrOff()/setIntrOn(),
// except that they are matched:
// 1. it takes two popOff()s to undo two pushOff()s
// 2. if interrupts are initially off, then pushOff, popOff leaves them off

// depth of 'pushOff' nesting
var push_offset = 0
// where interrupt enabled before 'pushOff'
var last_intr = false

public def pushOff() {
  let last = getIntr()
  setIntrOff()
  if !push_offset {
    last_intr = last
  }
  push_offset += 1
}

public def popOff() {
  assert(!getIntr(), "popOff - interruptible")
  push_offset -= 1
  assert(push_offset >= 0, "popOff")
  if !push_offset && last_intr {
    setIntrOn()
  }
}
